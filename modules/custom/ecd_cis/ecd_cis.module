<?php
/**
 * @file
 * ELMSLN integration for ECD.
 */

/**
 * Implements hook_cron().
 */
function ecd_cis_cron() {
  // assemble the CIS connection details from the keychain
  if ($settings = _cis_connector_build_registry('cis')) {
    // pull a list of courses and compare to what we have listed here
    $query = array(
      'status' => 1,
      'type' => 'course',
    );
    $remote = _cis_connection_query($query);
    // EFQ to get a list of all course nodes
    $query = new EntityFieldQuery();
    // pull all nodes
    $query->entityCondition('entity_type', 'node')
    // that are course
    ->entityCondition('bundle', 'course')
    // that are published
    ->propertyCondition('status', 1)
    // metaproperty to make sure we get a list of all of them
    ->addMetaData('account', user_load(1));
    // store results
    $result = $query->execute();
    // make sure we have a result
    $local = array();
    if (isset($result['node'])) {
      foreach ($result['node'] as $course) {
        $tmp = entity_load('node', $course->nid);
        $local[] = $tmp->field_machine_name[LANGUAGE_NONE][0]['value'];
      }
    }
    // compare the two arrays to see what new machine names showed up
    foreach ($remote as $course) {
      if (!in_array($course['field_machine_name'], $local)) {
        $node = new stdClass();
        $node->type = 'course';
        node_object_prepare($node);
        $node->language = LANGUAGE_NONE;
        $node->uid = 1;
        $node->status = 1;
        $node->promote = 0;
        $node->revision = 1;
        $node->title = $course['title'];
        $node->field_machine_name[LANGUAGE_NONE][0]['value'] = $course['field_machine_name'];
        // build out via submit then save to capture default settings
        if($node = node_submit($node)) {
          node_save($node);
        }
      }
    }
  }
}
